{"version":3,"sources":["panels/Home.js","img/persik.png","panels/WelcomeScreen.js","panels/QRListScreen.js","panels/AllowedQRListScreen.js","App.js","index.js"],"names":["Home","id","go","codeList","fetchedUser","showQRReader","logText","getText","fake","doGet","multiline","onClick","before","data-to","expandable","indicator","mode","length","WelcomeScreen","user","icon","header","first_name","action","size","QRListScreen","setCodeList","left","map","code","removable","onRemove","i","console","log","filter","text","AllowedQRListScreen","allowedList","label","platform","VKCOM","undefined","word","index","res","b","allowedCode","includes","push","getAllowedList","getNotAllowedList","App","useState","activePanel","setActivePanel","setUser","popout","setPopout","setScheme","maxId","setMaxId","setLogText","setGetText","useDidUpdateEffect","fn","inputs","didMountRef","useRef","useEffect","current","a","bridge","send","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","body","attributes","setNamedItem","JSON","stringify","parseInt","keys","p","key","parse","code_data","fetchData","then","e","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c5ebbfed.chunk.js","sourcesContent":["import React from 'react';\n\nimport {Cell, Counter, Panel, PanelHeader, Separator} from '@vkontakte/vkui';\nimport {Icon28QrCodeOutline, Icon28ScanViewfinderOutline, Icon28StarsCircleFillViolet} from \"@vkontakte/icons\";\n\nconst Home = ({id, go, fetchedUser, showQRReader, codeList, logText, getText, fake, doGet}) => {\n    return <Panel id={id}>\n        <PanelHeader>QR приложулька3</PanelHeader>\n\n        <Cell multiline>Log: {logText}</Cell>\n\n        <Cell multiline>Get: {getText}</Cell>\n        {/*showQRReader*/}\n\n        <Cell onClick={doGet} before={<Icon28ScanViewfinderOutline/>}>\n            СДелать гет\n        </Cell>\n\n        <Cell onClick={fake} before={<Icon28ScanViewfinderOutline/>}>\n            Отсканировать QR код\n        </Cell>\n\n        <Cell onClick={go} data-to='QrList' expandable before={<Icon28QrCodeOutline/>}\n              indicator={<Counter mode=\"primary\">{codeList.length}</Counter>}>\n            Список отсканированных QR кодов\n        </Cell>\n\n        <Separator/>\n\n        <Cell onClick={go} data-to='AllowedQrList' expandable before={<Icon28StarsCircleFillViolet/>}>\n            Бонусное задание\n        </Cell>\n    </Panel>\n}\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/persik.ae9f0072.png\";","import React from \"react\";\r\nimport {Button, Group, Panel, PanelHeader, PanelHeaderBack, Placeholder} from \"@vkontakte/vkui\";\r\nimport persik from \"../img/persik.png\";\r\nimport {Icon56UsersOutline} from \"@vkontakte/icons\";\r\n\r\nconst WelcomeScreen = ({id, fetchedUser, go}) => {\r\n    const getName = (user) => {\r\n        if (user == null || user.first_name == null)\r\n            return \"Приятель\"\r\n        return fetchedUser.first_name\r\n    }\r\n\r\n    return (\r\n        <Panel id={id}>\r\n            {/*<PanelHeader right={<Avatar size={36} />}>Panel 1</PanelHeader>*/}\r\n            <Group>\r\n                <Placeholder\r\n                    icon={<Icon56UsersOutline />}\r\n                    header={\"Приветствуем, \" + getName(fetchedUser) + \"!\"}\r\n                    action={<Button size=\"m\" onClick={go} data-to=\"Home\">Перейти к QR кодам</Button>}\r\n                >\r\n                    Приложение разработано в рамках хакатона \"Финал Вездекода 2021\"\r\n                </Placeholder>\r\n            </Group>\r\n        </Panel>\r\n    )\r\n}\r\n\r\nexport default WelcomeScreen;","import React from 'react';\n\nimport {\n    Cell,\n    Group,\n    List,\n    Panel,\n    PanelHeader,\n    PanelHeaderBack,\n    PanelHeaderClose,\n    platform,\n    VKCOM\n} from '@vkontakte/vkui';\n\nconst QRListScreen = ({id, go, fetchedUser, codeList, setCodeList}) => {\n    const onDragFinish = (from, to) => {\n        const draggingList = [...codeList];\n        draggingList.splice(from, 1);\n        draggingList.splice(to, 0, codeList[from]);\n        setCodeList(draggingList);\n    }\n\n    const onRemove = (i) => {\n        console.log(\"onRemove id: \" + i)\n        console.log(\"Before: \" + codeList)\n        console.log(\"After: \" + codeList.filter((code) => code.id !== i))\n        setCodeList(codeList.filter((code) => code.id !== i))\n    }\n\n    return <Panel id={id}>\n        <PanelHeader\n            left={<PanelHeaderBack onClick={go} data-to={'Home'}/>}\n        >Список кодов</PanelHeader>\n        <Group>\n            <List>\n                {codeList.map((code) =>\n                    <Cell multiline key={code.id}\n                          removable onRemove={() => {onRemove(code.id)}}\n                    >\n                        {code.text}\n                    </Cell>\n                )}\n            </List>\n        </Group>\n    </Panel>\n}\n\nexport default QRListScreen;\n","import React from 'react';\n\nimport {\n    Cell,\n    Group,\n    Header,\n    List,\n    MiniInfoCell,\n    Panel,\n    PanelHeader,\n    PanelHeaderBack,\n    platform,\n    Text,\n    VKCOM\n} from '@vkontakte/vkui';\nimport {Icon20ArticleOutline} from \"@vkontakte/icons\";\n\nconst AllowedQRListScreen = ({id, go, fetchedUser, codeList, allowedList}) => {\n    const getAllowedList = () => {\n        console.log(codeList)\n        console.log(allowedList)\n        let res = []\n        for (let code of codeList) {\n            console.log(\"code: \" + code.text)\n            console.log(\"codeType: \" + typeof(code.text))\n            let b = false\n            for (let allowedCode of allowedList) {\n                if (code.text.includes(allowedCode.text)) {\n                    b = true\n                    break\n                }\n            }\n            if (b) {\n                res.push(code)\n            }\n        }\n        return res\n    }\n\n    const getNotAllowedList = () => {\n        let res = []\n        for (let code of codeList) {\n            let b = false\n            for (let allowedCode of allowedList) {\n                if (code.text.includes(allowedCode.text)) {\n                    b = true\n                    break\n                }\n            }\n            if (!b) {\n                res.push(code)\n            }\n        }\n        return res\n    }\n\n    const getAllowedFormat = () => {\n        return allowedList.map((word, index) => \"\\\"\" + word.text + \"\\\"\" + (index === allowedList.length - 1 ? \"\" : \",\"))\n    }\n\n    return <Panel id={id}>\n        <PanelHeader\n            left={<PanelHeaderBack onClick={go} data-to={'Home'} label={platform === VKCOM ? 'Назад' : undefined}/>}\n        >Разрешенные коды</PanelHeader>\n        <Cell multiline> Код считается разрешенным, если включает в себя одну из следующий строк: { getAllowedFormat() }</Cell>\n        <Text>\n        </Text>\n        <Group header={<Header>Разрешенные коды</Header>}>\n            <List>\n                {getAllowedList().map((code) =>\n                    <Cell multiline key={code.id}>{code.text}</Cell>\n                )}\n            </List>\n        </Group>\n        <Group header={<Header>Неразрешенные коды</Header>}>\n            <List>\n                {getNotAllowedList().map((code) =>\n                    <Cell multiline key={code.id}>{code.text}</Cell>\n                )}\n            </List>\n        </Group>\n    </Panel>\n}\n\nexport default AllowedQRListScreen;\n","import React, {useEffect, useRef, useState} from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport {AdaptivityProvider, AppRoot, ScreenSpinner, View} from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport WelcomeScreen from \"./panels/WelcomeScreen\";\nimport QRListScreen from \"./panels/QRListScreen\";\nimport AllowedQRListScreen from \"./panels/AllowedQRListScreen\";\n\nconst App = (allowedList1 = allowedList) => {\n    const [activePanel, setActivePanel] = useState('WelcomeScreen');\n    const [fetchedUser, setUser] = useState(null);\n    const [popout, setPopout] = useState(<ScreenSpinner size='large'/>);\n    const [scheme, setScheme] = useState(null)\n    const [codeList, setCodeList] = useState([])\n    const [maxId, setMaxId] = useState(0)\n    const [logText, setLogText] = useState(\"\")\n    const [getText, setGetText] = useState(\"\")\n\n    const allowedList = [{text: \"test\", id: 4}, {text: \"b\", id: 5}, {text: \"123\", id: 6}]\n\n    useEffect(() => {\n        bridge.subscribe(({detail: {type, data}}) => {\n\n\n            if (type === 'VKWebAppUpdateConfig') {\n                const schemeAttribute = document.createAttribute('scheme')\n                // schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n                schemeAttribute.value = 'client_light';\n                setScheme(schemeAttribute.value)\n                document.body.attributes.setNamedItem(schemeAttribute);\n            }\n\n            if (type === 'VKWebAppStorageGetKeysFailed' || type === 'VKWebAppStorageGetFailed') {\n                setLogText(() => {\n                    return \"Type: \" + type + \". Data: \" + JSON.stringify(data)\n                })\n                bridge.send(\"VKWebAppStorageSet\", {\"key\": \"maxId\", \"value\": \"0\"});\n                bridge.send(\"VKWebAppStorageSet\", {\"key\": \"codeList\", \"value\": JSON.stringify([])});\n            }\n\n            if (type === \"VKWebAppStorageGetKeysResult\") {\n                bridge.send(\"VKWebAppStorageGet\", {\"keys\": [\"maxId\", \"codeList\"]});\n            }\n\n            if (type === 'VKWebAppStorageGetResult') {\n                setMaxId(parseInt(data.keys.filter((p) => p.key === \"maxId\").value))\n                setCodeList(JSON.parse(data.keys.filter((p) => p.key === \"codeList\").value))\n            }\n\n            if (type === 'VKWebAppOpenCodeReaderResult') {\n                setCodeList([...codeList, {text: data.code_data, id: maxId}])\n                setMaxId(maxId + 1)\n            }\n        });\n\n        async function fetchData() {\n            setPopout(null);\n            const user = await bridge.send('VKWebAppGetUserInfo');\n            setUser(user);\n            bridge.send(\"VKWebAppStorageGetKeys\", {\"count\": 2, \"offset\": 0});\n        }\n\n        fetchData();\n    }, []);\n\n    function useDidUpdateEffect(fn, inputs) {\n        const didMountRef = useRef(false);\n\n        useEffect(() => {\n            if (didMountRef.current)\n                fn();\n            else\n                didMountRef.current = true;\n        }, inputs);\n    }\n\n    useDidUpdateEffect(() => {\n        bridge.send(\"VKWebAppStorageSet\", {\"key\": \"maxId\", \"value\": JSON.stringify(maxId)})\n            .then(data => {\n\n            });\n    }, [maxId])\n\n    useDidUpdateEffect(() => {\n        bridge.send(\"VKWebAppStorageSet\", {\n            \"key\": \"codeList\",\n            \"value\": JSON.stringify(codeList)\n        });\n    }, [codeList])\n\n    const fake = () => {\n        setCodeList([...codeList, {text: \"ASD\", id: maxId}])\n        setMaxId(maxId + 1)\n    }\n\n    const doGet = () => {\n        bridge.send(\"VKWebAppStorageGet\", {\"keys\": [\"maxId\", \"codeList\"]}).then(data => {\n            setGetText(JSON.stringify(data))\n        });\n    }\n\n    const go = e => {\n        setActivePanel(e.currentTarget.dataset.to);\n    };\n\n    const showQRReader = () => {\n        bridge.send(\"VKWebAppOpenCodeReader\")\n    }\n\n    return (\n        <AdaptivityProvider>\n            <AppRoot>\n                <View activePanel={activePanel} popout={popout}>\n                    <WelcomeScreen id='WelcomeScreen' fetchedUser={fetchedUser} go={go}/>\n                    <Home id='Home'\n                          fetchedUser={fetchedUser} go={go} showQRReader={showQRReader}\n                          codeList={codeList}\n                          logText={logText}\n                          getText={getText}\n                          fake={fake}\n                          doGet={doGet}\n                    />\n                    <QRListScreen id='QrList' fetchedUser={fetchedUser} go={go}\n                                  codeList={codeList}\n                                  setCodeList={setCodeList}/>\n                    <AllowedQRListScreen id='AllowedQrList'\n                                         fetchedUser={fetchedUser}\n                                         go={go}\n                                         codeList={codeList}\n                                         allowedList={allowedList}/>\n                </View>\n            </AppRoot>\n        </AdaptivityProvider>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}