{"version":3,"sources":["panels/Home.js","img/persik.png","panels/WelcomeScreen.js","panels/QRListScreen.js","panels/AllowedQRListScreen.js","App.js","index.js"],"names":["Home","id","go","showQRReader","fetchedUser","codeList","onClick","before","data-to","expandable","indicator","mode","length","WelcomeScreen","user","icon","header","first_name","action","size","QRListScreen","setCodeList","left","map","code","multiline","removable","onRemove","i","console","log","filter","text","AllowedQRListScreen","allowedList","label","platform","VKCOM","undefined","word","index","res","b","allowedCode","includes","push","getAllowedList","getNotAllowedList","App","useState","activePanel","setActivePanel","setUser","popout","setPopout","setScheme","maxId","setMaxId","useEffect","a","bridge","send","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","body","attributes","setNamedItem","JSON","stringify","parseInt","keys","p","key","parse","code_data","fetchData","e","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f00a4db0.chunk.js","sourcesContent":["import React from 'react';\n\nimport {Cell, Counter, Panel, PanelHeader, Separator} from '@vkontakte/vkui';\nimport {Icon28QrCodeOutline, Icon28ScanViewfinderOutline, Icon28StarsCircleFillViolet} from \"@vkontakte/icons\";\n\nconst Home = ({id, go, fetchedUser, showQRReader, codeList}) => {\n    const START_SIZE = 8\n    /*\n        const [bitsSize, setBitsSize] = useState(START_SIZE)\n        const [bitsInSecond, setBitsInSecond] = useState(Array.from({length: bitsSize}, (v, i) => 0))\n        const [currentSecond, setCurrentSecond] = useState(0)\n        const [myInterval, setMyInterval] = useState(null)\n\n        const switchChange = (index, value) => {\n            stopPressed()\n            bitsInSecond[index] = bitsInSecond[index] ^ 1\n        }\n\n        const startPressed = (bits) => {\n            if (myInterval !== null) {\n                clearInterval(myInterval)\n            }\n            let sec = 0\n            setCurrentSecond(1)\n            console.log(bits[0])\n            bridge.send(\"VKWebAppFlashSetLevel\", {\"level\": bits[0]});\n            let timerId = setInterval(() => {\n                sec = (sec + 1) % (bitsSize)\n                setCurrentSecond(sec + 1)\n                console.log(bits[sec])\n                bridge.send(\"VKWebAppFlashSetLevel\", {\"level\": bits[sec]});\n            }, 1000);\n            setMyInterval(timerId)\n        }\n\n        const stopPressed = () => {\n            clearInterval(myInterval)\n            setCurrentSecond(0)\n            console.log(\"Stop!\")\n            bridge.send(\"VKWebAppFlashSetLevel\", {\"level\": 0});\n        }*/\n\n    return <Panel id={id}>\n        <PanelHeader>QR приложулька</PanelHeader>\n\n        <Cell onClick={showQRReader} before={<Icon28ScanViewfinderOutline/>}>\n            Отсканировать QR код\n        </Cell>\n\n        <Cell onClick={go} data-to='QrList' expandable before={<Icon28QrCodeOutline/>}\n              indicator={<Counter mode=\"primary\">{codeList.length}</Counter>}>\n            Список отсканированных QR кодов\n        </Cell>\n\n        <Separator/>\n\n        <Cell onClick={go} data-to='AllowedQrList' expandable before={<Icon28StarsCircleFillViolet/>}>\n            Бонусное задание\n        </Cell>\n    </Panel>\n}\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/persik.ae9f0072.png\";","import React from \"react\";\r\nimport {Button, Group, Panel, PanelHeader, PanelHeaderBack, Placeholder} from \"@vkontakte/vkui\";\r\nimport persik from \"../img/persik.png\";\r\nimport {Icon56UsersOutline} from \"@vkontakte/icons\";\r\n\r\nconst WelcomeScreen = ({id, fetchedUser, go}) => {\r\n    const getName = (user) => {\r\n        if (user == null || user.first_name == null)\r\n            return \"Приятель\"\r\n        return fetchedUser.first_name\r\n    }\r\n\r\n    return (\r\n        <Panel id={id}>\r\n            {/*<PanelHeader right={<Avatar size={36} />}>Panel 1</PanelHeader>*/}\r\n            <Group>\r\n                <Placeholder\r\n                    icon={<Icon56UsersOutline />}\r\n                    header={\"Приветствуем, \" + getName(fetchedUser) + \"!\"}\r\n                    action={<Button size=\"m\" onClick={go} data-to=\"Home\">Перейти к QR кодам</Button>}\r\n                >\r\n                    Приложение разработано в рамках хакатона \"Финал Вездекода 2021\"\r\n                </Placeholder>\r\n            </Group>\r\n        </Panel>\r\n    )\r\n}\r\n\r\nexport default WelcomeScreen;","import React from 'react';\n\nimport {\n    Cell,\n    Group,\n    List,\n    Panel,\n    PanelHeader,\n    PanelHeaderBack,\n    PanelHeaderClose,\n    platform,\n    VKCOM\n} from '@vkontakte/vkui';\n\nconst QRListScreen = ({id, go, fetchedUser, codeList, setCodeList}) => {\n    const onDragFinish = (from, to) => {\n        const draggingList = [...codeList];\n        draggingList.splice(from, 1);\n        draggingList.splice(to, 0, codeList[from]);\n        setCodeList(draggingList);\n    }\n\n    const onRemove = (i) => {\n        console.log(\"onRemove id: \" + i)\n        console.log(\"Before: \" + codeList)\n        console.log(\"After: \" + codeList.filter((code) => code.id !== i))\n        setCodeList(codeList.filter((code) => code.id !== i))\n    }\n\n    return <Panel id={id}>\n        <PanelHeader\n            left={<PanelHeaderBack onClick={go} data-to={'Home'}/>}\n        >Список кодов</PanelHeader>\n        <Group>\n            <List>\n                {codeList.map((code) =>\n                    <Cell multiline key={code.id}\n                          removable onRemove={() => {onRemove(code.id)}}\n                    >\n                        {code.text}\n                    </Cell>\n                )}\n            </List>\n        </Group>\n    </Panel>\n}\n\nexport default QRListScreen;\n","import React from 'react';\n\nimport {\n    Cell,\n    Group,\n    Header,\n    List,\n    MiniInfoCell,\n    Panel,\n    PanelHeader,\n    PanelHeaderBack,\n    platform,\n    Text,\n    VKCOM\n} from '@vkontakte/vkui';\nimport {Icon20ArticleOutline} from \"@vkontakte/icons\";\n\nconst AllowedQRListScreen = ({id, go, fetchedUser, codeList, allowedList}) => {\n    const getAllowedList = () => {\n        console.log(codeList)\n        console.log(allowedList)\n        let res = []\n        for (let code of codeList) {\n            console.log(\"code: \" + code.text)\n            console.log(\"codeType: \" + typeof(code.text))\n            let b = false\n            for (let allowedCode of allowedList) {\n                if (code.text.includes(allowedCode.text)) {\n                    b = true\n                    break\n                }\n            }\n            if (b) {\n                res.push(code)\n            }\n        }\n        return res\n    }\n\n    const getNotAllowedList = () => {\n        let res = []\n        for (let code of codeList) {\n            let b = false\n            for (let allowedCode of allowedList) {\n                if (code.text.includes(allowedCode.text)) {\n                    b = true\n                    break\n                }\n            }\n            if (!b) {\n                res.push(code)\n            }\n        }\n        return res\n    }\n\n    const getAllowedFormat = () => {\n        return allowedList.map((word, index) => \"\\\"\" + word.text + \"\\\"\" + (index === allowedList.length - 1 ? \"\" : \",\"))\n    }\n\n    return <Panel id={id}>\n        <PanelHeader\n            left={<PanelHeaderBack onClick={go} data-to={'Home'} label={platform === VKCOM ? 'Назад' : undefined}/>}\n        >Разрешенные коды</PanelHeader>\n        <Cell multiline> Код считается разрешенным, если включает в себя одну из следующий строк: { getAllowedFormat() }</Cell>\n        <Text>\n        </Text>\n        <Group header={<Header>Разрешенные коды</Header>}>\n            <List>\n                {getAllowedList().map((code) =>\n                    <Cell multiline key={code.id}>{code.text}</Cell>\n                )}\n            </List>\n        </Group>\n        <Group header={<Header>Неразрешенные коды</Header>}>\n            <List>\n                {getNotAllowedList().map((code) =>\n                    <Cell multiline key={code.id}>{code.text}</Cell>\n                )}\n            </List>\n        </Group>\n    </Panel>\n}\n\nexport default AllowedQRListScreen;\n","import React, {useEffect, useState} from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport {AdaptivityProvider, AppRoot, ScreenSpinner, View} from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport WelcomeScreen from \"./panels/WelcomeScreen\";\nimport QRListScreen from \"./panels/QRListScreen\";\nimport AllowedQRListScreen from \"./panels/AllowedQRListScreen\";\n\nconst App = (allowedList1 = allowedList) => {\n    const [activePanel, setActivePanel] = useState('WelcomeScreen');\n    const [fetchedUser, setUser] = useState(null);\n    const [popout, setPopout] = useState(<ScreenSpinner size='large'/>);\n    const [scheme, setScheme] = useState(null)\n    const [codeList, setCodeList] = useState([])\n    const [maxId, setMaxId] = useState(0)\n\n    const allowedList = [{text: \"test\", id: 4}, {text: \"b\", id: 5}, {text: \"123\", id: 6}]\n\n    useEffect(() => {\n        bridge.subscribe(({detail: {type, data}}) => {\n            console.log(\"Type: \" + type + \". Data: \" + data)\n            if (type === 'VKWebAppUpdateConfig') {\n                const schemeAttribute = document.createAttribute('scheme')\n                // schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n                schemeAttribute.value = 'client_light';\n                setScheme(schemeAttribute.value)\n                document.body.attributes.setNamedItem(schemeAttribute);\n            }\n\n            if (type === 'VKWebAppStorageGetKeysFailed' || type === 'VKWebAppStorageGetFailed') {\n                bridge.send(\"VKWebAppStorageSet\", {\"key\": \"maxId\", \"value\": \"0\"});\n                bridge.send(\"VKWebAppStorageSet\", {\"key\": \"codeList\", \"value\": JSON.stringify([])});\n            }\n\n            if (type === \"VKWebAppStorageGetKeysResult\") {\n                bridge.send(\"VKWebAppStorageGet\", {\"keys\": [\"maxId\", \"codeList\"]});\n            }\n\n            if (type === 'VKWebAppStorageGetResult') {\n                setMaxId(parseInt(data.keys.filter((p) => p.key === \"maxId\").value))\n                setCodeList(JSON.parse(data.keys.filter((p) => p.key === \"codeList\").value))\n            }\n\n            if (type === 'VKWebAppOpenCodeReaderResult') {\n                bridge.send(\"VKWebAppStorageSet\", {\"key\": \"maxId\", \"value\": JSON.stringify(maxId)});\n                bridge.send(\"VKWebAppStorageSet\", {\"key\": \"codeList\", \"value\": JSON.stringify(codeList)});\n\n                setCodeList([...codeList, {text: data.code_data, id: maxId}])\n                setMaxId(maxId + 1)\n            }\n        });\n\n        async function fetchData() {\n            setPopout(null);\n            const user = await bridge.send('VKWebAppGetUserInfo');\n            setUser(user);\n            bridge.send(\"VKWebAppStorageGetKeys\", {\"count\": 2, \"offset\": 0});\n        }\n\n        fetchData();\n    }, []);\n\n    const go = e => {\n        setActivePanel(e.currentTarget.dataset.to);\n    };\n\n    const showQRReader = () => {\n        bridge.send(\"VKWebAppOpenCodeReader\")\n    }\n\n    return (\n        <AdaptivityProvider>\n            <AppRoot>\n                <View activePanel={activePanel} popout={popout}>\n                    <WelcomeScreen id='WelcomeScreen' fetchedUser={fetchedUser} go={go}/>\n                    <Home id='Home' fetchedUser={fetchedUser} go={go} showQRReader={showQRReader} codeList={codeList}/>\n                    <QRListScreen id='QrList' fetchedUser={fetchedUser} go={go}\n                                  codeList={codeList}\n                                  setCodeList={setCodeList}/>\n                    <AllowedQRListScreen id='AllowedQrList'\n                                         fetchedUser={fetchedUser}\n                                         go={go}\n                                         codeList={codeList}\n                                         allowedList={allowedList}/>\n                </View>\n            </AppRoot>\n        </AdaptivityProvider>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}