{"version":3,"sources":["panels/Home.js","img/persik.png","panels/WelcomeScreen.js","panels/QRListScreen.js","panels/AllowedQRListScreen.js","App.js","index.js"],"names":["Home","id","go","codeList","fetchedUser","showQRReader","logText","getText","fake","doGet","multiline","onClick","before","data-to","expandable","indicator","mode","length","WelcomeScreen","user","icon","header","first_name","action","size","QRListScreen","setCodeList","left","map","code","removable","onRemove","i","filter","text","AllowedQRListScreen","allowedList","label","platform","VKCOM","undefined","word","index","console","log","res","b","allowedCode","includes","push","getAllowedList","getNotAllowedList","App","useState","activePanel","setActivePanel","setUser","popout","setPopout","setScheme","setGetText","useEffect","a","bridge","send","then","data","data1","JSON","parse","keys","p","key","value","catch","stringify","subscribe","detail","type","schemeAttribute","document","createAttribute","body","attributes","setNamedItem","code_data","Math","random","toString","fetchData","fn","inputs","didMountRef","useRef","current","useDidUpdateEffect","e","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6a4071fb.chunk.js","sourcesContent":["import React from 'react';\n\nimport {Cell, Counter, Panel, PanelHeader, Separator} from '@vkontakte/vkui';\nimport {Icon28QrCodeOutline, Icon28ScanViewfinderOutline, Icon28StarsCircleFillViolet} from \"@vkontakte/icons\";\n\nconst Home = ({id, go, fetchedUser, showQRReader, codeList, logText, getText, fake, doGet}) => {\n    return <Panel id={id}>\n        <PanelHeader>QR приложулька5</PanelHeader>\n\n        <Cell multiline>Log: {logText}</Cell>\n\n        <Cell multiline>Get: {getText}</Cell>\n        {/*showQRReader*/}\n\n        <Cell onClick={doGet} before={<Icon28ScanViewfinderOutline/>}>\n            СДелать гет\n        </Cell>\n\n        <Cell onClick={fake} before={<Icon28ScanViewfinderOutline/>}>\n            Отсканировать QR код\n        </Cell>\n\n        <Cell onClick={go} data-to='QrList' expandable before={<Icon28QrCodeOutline/>}\n              indicator={<Counter mode=\"primary\">{codeList.length}</Counter>}>\n            Список отсканированных QR кодов\n        </Cell>\n\n        <Separator/>\n\n        <Cell onClick={go} data-to='AllowedQrList' expandable before={<Icon28StarsCircleFillViolet/>}>\n            Бонусное задание\n        </Cell>\n    </Panel>\n}\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/persik.ae9f0072.png\";","import React from \"react\";\r\nimport {Button, Group, Panel, PanelHeader, PanelHeaderBack, Placeholder} from \"@vkontakte/vkui\";\r\nimport persik from \"../img/persik.png\";\r\nimport {Icon56UsersOutline} from \"@vkontakte/icons\";\r\n\r\nconst WelcomeScreen = ({id, fetchedUser, go}) => {\r\n    const getName = (user) => {\r\n        if (user == null || user.first_name == null)\r\n            return \"Приятель\"\r\n        return fetchedUser.first_name\r\n    }\r\n\r\n    return (\r\n        <Panel id={id}>\r\n            {/*<PanelHeader right={<Avatar size={36} />}>Panel 1</PanelHeader>*/}\r\n            <Group>\r\n                <Placeholder\r\n                    icon={<Icon56UsersOutline />}\r\n                    header={\"Приветствуем, \" + getName(fetchedUser) + \"!\"}\r\n                    action={<Button size=\"m\" onClick={go} data-to=\"Home\">Перейти к QR кодам</Button>}\r\n                >\r\n                    Приложение разработано в рамках хакатона \"Финал Вездекода 2021\"\r\n                </Placeholder>\r\n            </Group>\r\n        </Panel>\r\n    )\r\n}\r\n\r\nexport default WelcomeScreen;","import React from 'react';\n\nimport {\n    Cell,\n    Group,\n    List,\n    Panel,\n    PanelHeader,\n    PanelHeaderBack,\n    PanelHeaderClose,\n    platform,\n    VKCOM\n} from '@vkontakte/vkui';\n\nconst QRListScreen = ({id, go, fetchedUser, codeList, setCodeList}) => {\n    const onRemove = (i) => {\n        setCodeList(codeList.filter((code) => code.id !== i))\n    }\n\n    return <Panel id={id}>\n        <PanelHeader\n            left={<PanelHeaderBack onClick={go} data-to={'Home'}/>}\n        >Список кодов</PanelHeader>\n        <Group>\n            <List>\n                {codeList.map((code) =>\n                    <Cell multiline key={code.id}\n                          removable onRemove={() => {onRemove(code.id)}}\n                    >\n                        {code.text}\n                    </Cell>\n                )}\n            </List>\n        </Group>\n    </Panel>\n}\n\nexport default QRListScreen;\n","import React from 'react';\n\nimport {Cell, Group, Header, List, Panel, PanelHeader, PanelHeaderBack, platform, Text, VKCOM} from '@vkontakte/vkui';\n\nconst AllowedQRListScreen = ({id, go, fetchedUser, codeList, allowedList}) => {\n    const getAllowedList = () => {\n        console.log(codeList)\n        console.log(allowedList)\n        let res = []\n        for (let code of codeList) {\n            console.log(\"code: \" + code.text)\n            console.log(\"codeType: \" + typeof (code.text))\n            let b = false\n            for (let allowedCode of allowedList) {\n                if (code.text.includes(allowedCode.text)) {\n                    b = true\n                    break\n                }\n            }\n            if (b) {\n                res.push(code)\n            }\n        }\n        return res\n    }\n\n    const getNotAllowedList = () => {\n        let res = []\n        for (let code of codeList) {\n            let b = false\n            for (let allowedCode of allowedList) {\n                if (code.text.includes(allowedCode.text)) {\n                    b = true\n                    break\n                }\n            }\n            if (!b) {\n                res.push(code)\n            }\n        }\n        return res\n    }\n\n    const getAllowedFormat = () => {\n        return allowedList.map((word, index) => \"\\\"\" + word.text + \"\\\"\" + (index === allowedList.length - 1 ? \"\" : \", \"))\n    }\n\n    return <Panel id={id}>\n        <PanelHeader\n            left={<PanelHeaderBack onClick={go} data-to={'Home'} label={platform === VKCOM ? 'Назад' : undefined}/>}\n        >Разрешенные коды</PanelHeader>\n        <Cell multiline> Код считается разрешенным, если включает в себя одну из следующий\n            строк: {getAllowedFormat()}</Cell>\n        <Text>\n        </Text>\n        <Group header={<Header>Разрешенные коды</Header>}>\n            <List>\n                {getAllowedList().map((code) =>\n                    <Cell multiline key={code.id}>{code.text}</Cell>\n                )}\n            </List>\n        </Group>\n        <Group header={<Header>Неразрешенные коды</Header>}>\n            <List>\n                {getNotAllowedList().map((code) =>\n                    <Cell multiline key={code.id}>{code.text}</Cell>\n                )}\n            </List>\n        </Group>\n    </Panel>\n}\n\nexport default AllowedQRListScreen;\n","import React, {useEffect, useRef, useState} from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport {AdaptivityProvider, AppRoot, ScreenSpinner, View} from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport WelcomeScreen from \"./panels/WelcomeScreen\";\nimport QRListScreen from \"./panels/QRListScreen\";\nimport AllowedQRListScreen from \"./panels/AllowedQRListScreen\";\n\nconst App = (allowedList1 = allowedList) => {\n    const [activePanel, setActivePanel] = useState('WelcomeScreen');\n    const [fetchedUser, setUser] = useState(null);\n    const [popout, setPopout] = useState(<ScreenSpinner size='large'/>);\n    const [scheme, setScheme] = useState(null)\n    const [codeList, setCodeList] = useState([])\n    const [maxId, setMaxId] = useState(0)\n    const [logText, setLogText] = useState(\"\")\n    const [getText, setGetText] = useState(\"\")\n\n    const allowedList = [{text: \"test\", id: 4}, {text: \"b\", id: 5}, {text: \"123\", id: 6}]\n\n    useEffect(() => {\n        bridge.subscribe(({detail: {type, data}}) => {\n            if (type === 'VKWebAppUpdateConfig') {\n                const schemeAttribute = document.createAttribute('scheme')\n                // schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n                schemeAttribute.value = 'client_light';\n                setScheme(schemeAttribute.value)\n                document.body.attributes.setNamedItem(schemeAttribute);\n            }\n\n            if (type === 'VKWebAppOpenCodeReaderResult') {\n                setCodeList([...codeList, {text: data.code_data, id: Math.random().toString()}])\n            }\n        });\n\n        async function fetchData() {\n            setPopout(null);\n            const user = await bridge.send('VKWebAppGetUserInfo');\n            setUser(user);\n            bridge.send(\"VKWebAppStorageGetKeys\", {\"count\": 2, \"offset\": 0}).then(data => {\n                bridge.send(\"VKWebAppStorageGet\", {\"keys\": [\"maxId\", \"codeList\"]}).then(data1 => {\n                    setCodeList(\n                        JSON.parse(data1.keys.filter((p) => p.key === \"codeList\")[0].value\n                        ))\n                });\n            }).catch(() => {\n                bridge.send(\"VKWebAppStorageSet\", {\"key\": \"codeList\", \"value\": JSON.stringify([])});\n            })\n        }\n\n        fetchData();\n    }, []);\n\n    function useDidUpdateEffect(fn, inputs) {\n        const didMountRef = useRef(false);\n\n        useEffect(() => {\n            if (didMountRef.current)\n                fn();\n            else\n                didMountRef.current = true;\n        }, inputs);\n    }\n\n    useDidUpdateEffect(() => {\n        bridge.send(\"VKWebAppStorageSet\", {\n            \"key\": \"codeList\",\n            \"value\": JSON.stringify(codeList)\n        });\n    }, [codeList])\n\n    const fake = () => {\n        setCodeList([...codeList, {text: \"ASD\", id: Math.random().toString()}])\n    }\n\n    const doGet = () => {\n        bridge.send(\"VKWebAppStorageGet\", {\"keys\": [\"maxId\", \"codeList\"]}).then(data => {\n            setGetText(JSON.stringify(data))\n        });\n    }\n\n    const go = e => {\n        setActivePanel(e.currentTarget.dataset.to);\n    };\n\n    const showQRReader = () => {\n        bridge.send(\"VKWebAppOpenCodeReader\")\n    }\n\n    return (\n        <AdaptivityProvider>\n            <AppRoot>\n                <View activePanel={activePanel} popout={popout}>\n                    <WelcomeScreen id='WelcomeScreen' fetchedUser={fetchedUser} go={go}/>\n                    <Home id='Home'\n                          fetchedUser={fetchedUser} go={go} showQRReader={showQRReader}\n                          codeList={codeList}\n                          logText={logText}\n                          getText={getText}\n                          fake={fake}\n                          doGet={doGet}\n                    />\n                    <QRListScreen id='QrList' fetchedUser={fetchedUser} go={go}\n                                  codeList={codeList}\n                                  setCodeList={setCodeList}/>\n                    <AllowedQRListScreen id='AllowedQrList'\n                                         fetchedUser={fetchedUser}\n                                         go={go}\n                                         codeList={codeList}\n                                         allowedList={allowedList}/>\n                </View>\n            </AppRoot>\n        </AdaptivityProvider>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}